package bankingmanagementproj.com;

import java.sql.SQLException;
import java.util.Scanner;

public class Bank {
	public static void main(String[] args) throws ClassNotFoundException, SQLException {
		Scanner sc = new Scanner(System.in);
		System.out.println("welcome to CBIbank");
		while (true) {
			System.out.println("  ");
			System.out.println("1. create account");
			System.out.println("2. login");
			System.out.println("3. exit");
			System.out.println("enter the the choice:");
			int choice = sc.nextInt();
			switch (choice) {
			case 1:
				Bankinfo.CreateAccount();
				break;
			case 2:

				Bankinfo.login();
				break;
			case 3: {
				System.out.println("thank you");
				System.exit(0);
			}
				break;
			default:
				System.out.println("invalid input");

			}
		}

	}
}
package bankingmanagementproj.com;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Scanner;

public class Bankinfo {
	static Scanner sc = new Scanner(System.in);
	static Connection con = null;
	static PreparedStatement ps = null;
	static int Accountid = 0;

	static void CreateAccount() throws ClassNotFoundException, SQLException {
		System.out.println("enter the name");
		String name = sc.next();
		sc.nextLine();
		System.out.println("enter the email");
		String email = sc.nextLine();
		System.out.println("enter the password");
		String password = sc.nextLine();
		System.out.println("enter the balance");
		double balance = sc.nextDouble();
		con = Connect.giveme();
		String q1 = "insert into bankinfo(name,email,password,balance) values(?,?,?,?)";
		ps = con.prepareStatement(q1);
		ps.setString(1, name);
		ps.setString(2, email);
		ps.setString(3, password);
		ps.setDouble(4, balance);
		int i = ps.executeUpdate();
		if (i > 0) {
			System.out.println("Account Created");
		} else {
			System.out.println("Account not created");
		}
	}

	static void login() throws ClassNotFoundException, SQLException {
		System.out.println("enter the email");
		String email = sc.next();
		sc.nextLine();
		System.out.println("enter the password");
		String password = sc.nextLine();
		con = Connect.giveme();
		String q2 = "select * from bankinfo where email=? and password=?";
		ps = con.prepareStatement(q2);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if (rs.next()) {
			System.out.println("loggined in!");
			System.out.println("welcome " + rs.getString(2));
			Accountid = rs.getInt(1);
			if (Accountid != 0) {
				loginmenu();
			} else {
				System.out.println("Username not found");
			}
		} else {
			System.out.println("wrong password");
		}
	}

	private static void loginmenu() throws ClassNotFoundException, SQLException {

		System.out.println("WELCOME TO LOGINMENU");
		while (true) {
			System.out.println("1. view account ");
			System.out.println("2. withdraw");
			System.out.println("3. deposit");
			System.out.println("4. TransferAmount");
			System.out.println("5.tansactionhistory");
			System.out.println("6. logout");
			System.out.println("enter the choice");
			int choice = sc.nextInt();
			switch (choice) {
			case 1:
				ViewAccount();
				break;
			case 2:
				Withdraw();
				break;
			case 3:
				deposit();
				break;
			case 4:
				TransferAmount();
				break;
			case 5:
				transactionHistory();
				break;
			case 6:
				System.out.println("logged out");
				return;

			default:
				System.out.println("invalid input");
				break;
			}
		}
	}

	static public void ViewAccount() throws ClassNotFoundException, SQLException {
		System.out.println("enter the password");
		String pass = sc.next();
		sc.nextLine();
		con = Connect.giveme();
		String s3 = "select * from bankinfo where password =?";
		ps = con.prepareStatement(s3);
		ps.setString(1, pass);
		ResultSet rs = ps.executeQuery();
		if (rs.next()) {
			System.out.println("Name :" + rs.getString("name"));
			System.out.println("Balance :" + rs.getDouble("balance"));
		} else {
			System.out.println("record not found");
		}
	}

	public static void Withdraw() throws ClassNotFoundException, SQLException {

		System.out.println("enter the amount");
		double amount = sc.nextDouble();
		System.out.println("enter the password");
		String pass = sc.next();
		con = Connect.giveme();
		String s3 = "select balance from  bankinfo where id=? ";
		ps = con.prepareStatement(s3);
		ps.setInt(1, Accountid);
		ResultSet rs = ps.executeQuery();
		if (rs.next()) {
			double bal = rs.getDouble("balance");
			if (bal > amount) {
				String s4 = "update bankinfo set balance=balance-? where password=? ";
				ps = con.prepareStatement(s4);
				ps.setDouble(1, amount);
				ps.setString(2, pass);
				int i = ps.executeUpdate();
				if (i > 0) {
					transfer("withdraw", amount, Accountid);
					System.out.println(amount + " :withdraw sucesfully");
				} else {
					System.out.println("withdraw failed");
				}
			} else {
				System.out.println("Insufent balance");
			}
		} else {
			System.out.println("account not found");
		}
	}

	public static void deposit() throws SQLException {
		System.out.println("enter the amount");
		double amount = sc.nextDouble();
		if (amount > 0) {
			String s1 = "update bankinfo set balance=balance+? where id=?";
			ps = con.prepareStatement(s1);
			ps.setDouble(1, amount);
			ps.setInt(2, Accountid);
			int rs = ps.executeUpdate();
			if (rs > 0) {
				transfer("Deposited", amount, Accountid);
				System.out.println("the amount deposited " + amount);
			} else {
				System.out.println("deposited failed");
			}
		} else {
			System.out.println("invalid amount");
		}
	}

	private static void TransferAmount() throws SQLException {
		System.out.println("enter the reciver id");
		int id = sc.nextInt();
		System.out.println("enter the amount");
		double amount = sc.nextInt();
		con.setAutoCommit(false);

		if (amount > 0) {
			String s1 = "select balance from bankinfo where id=?";
			ps = con.prepareStatement(s1);
			ps.setInt(1, Accountid);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				double bal = rs.getDouble("balance");
				if (bal >= amount) {
					String s2 = "update bankinfo set balance=balance-? where id =?";
					ps = con.prepareStatement(s2);
					ps.setDouble(1, amount);
					ps.setInt(2, Accountid);
					int r = ps.executeUpdate();
					if (r > 0) {
						transfer("sended", amount, Accountid);// tranfer method
						System.out.println(amount + ": sented");
					} else {
						System.out.println("not sented");
					}
				} else {
					System.out.println("Insuffient balance");
				}
			}
			String s3 = "update bankinfo set balance=balance+? where id =?";
			ps = con.prepareStatement(s3);
			ps.setDouble(1, amount);
			ps.setInt(2, id);
			int r = ps.executeUpdate();
			if (r > 0) {
				transfer("recieved", amount, id);//
				System.out.println(amount + ": recieved");
			} else {

				System.out.println("not recieved");
				con.rollback();
			}
		}

		else {
			System.out.println("invalid amount");
		}

	}

	static public void transfer(String type, double amount, int id) throws SQLException {
		String s1 = "insert into transaction(type,amount,Accnum,date_t) values(?,?,?,?)";
		ps = con.prepareStatement(s1);
		ps.setString(1, type);
		ps.setDouble(2, amount);
		ps.setInt(3, id);
		ps.setTimestamp(4, Timestamp.valueOf(LocalDateTime.now()));
		ps.executeUpdate();
	}

	private static void transactionHistory() throws SQLException {
//		String s1 = "select * from transaction where Accnum =? ORDER by date_t desc ";
//		ps = con.prepareStatement(s1);
//		ps.setInt(1, Accountid);
//		ResultSet rs = ps.executeQuery();
//		while (rs.next()) {
//			System.out.println("transaction id :" + " " + rs.getString(1) + " " + "transation type :" + rs.getString(2)
//					+ " " + "amount :" + rs.getString(3) + " " + "account no :" + rs.getString(4) + " " + "Date :"
//					+ rs.getString(5));
		String s1 = "select i.name,t.t_id,t.type,t.amount,t.Accnum,t.date_t from bankinfo i inner join transaction t on i.id=t.Accnum ";
		ps = con.prepareStatement(s1);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {
			System.out.println("Transaction id :" + rs.getInt("t.t_id") + "|" + "The money " + " "
					+ rs.getString("t.type") + " " + "by  " + rs.getString("i.name") + " | " + " Amount:"
					+ rs.getDouble("t.amount") + " | " + " Account No:" + rs.getInt("t.Accnum") + " | " + " The data :"
					+ " " + rs.getTimestamp("t.date_t"));

		}

	}

}
package bankingmanagementproj.com;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class Connect {
	
		public static Connection giveme() throws ClassNotFoundException, SQLException {
			 Class.forName("com.mysql.cj.jdbc.Driver");
			//System.out.println("loaded");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bank?user=root&password=tiger");
			// System.out.println("estrablished");
			 return con;
			 }
		public static void main(String[] args) throws ClassNotFoundException, SQLException {
			giveme();
		}
}
	
		
		
	


